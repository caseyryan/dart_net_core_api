projectName: service_template_dev
# этот порт нужен для обратного прокси. 
# Именно он будет использоваться для доступа ко всему сервису
# то есть после запуска, например, можно будет проверить доступность сервиса 
# обратившись к http://localhost:8999/api/v1/health
nginxExternalPort: 8999

jwtConfig:
  hmacKey: REPLACE_WITH_YOUR_HMAC_KEY
  refreshTokenHmacKey: REPLACE_WITH_YOUR_REFRESH_TOKEN_HMAC_KEY
  issuer: http://localhost
  bearerLifeSeconds: 86400
  useRefreshToken: true
  refreshLifeSeconds: 2592000
  audiences:
    - http://localhost

maxUploadFileSizeBytes: 104857600
httpPort: 8084
httpsPort: 8085

accessControlHeaders:
  allowOrigin: '*'
  allowMethods: 'GET,POST,PUT,DELETE,PATCH,OPTIONS'
  allowHeaders: 'Content-Type,Authorization,Accept,Origin,X-Requested-With,X-CSRF-Token,Cache-Control,Access-Control-Request-Method,Access-Control-Request-Headers'
  maxAge: 3600

# usedDbConfig must contain the name of the database config
# which you want to use. In this case the server will use 
# postgresqlConfig even if other database configs are also filled
usedDbConfig: postgresqlConfig
postgreSQLConfig:
  user: default_db_user
  password: default_pwd
  database: default_db
  printQueries: true
  isSecureConnection: false
  host: localhost
  port: 5455
  localDataPath: /home/konstantin/default_db_path_dev

# not supported yet
mongoConfig: {}
mysqlConfig: {} 

passwordHashConfig:
  salt: REPLACE_WITH_PASSWORD_HASH_SALT

staticFileConfig:
  isAbsolute: false
  staticFilesRoot: bin/static_files

socketConfig:
  port: 3001
  allowDefaultNamespace: true

failedPasswordConfig:
  numAllowedAttempts: 5
  blockMinutes:
    - 5
    - 15
    - 30
    - 60
    - 120
    - 240
    - 1440

printDebugInfo: true