{
  "controllers": [
    {
      "controller_name": "AuthController",
      "description": "Generates JWT tokens and refresh tokens, creates new user accounts",
      "title": "User Authorization Controller",
      "group": {
        "name": "User Area",
        "id": "user-area"
      },
      "endpoints": [
        {
          "description": "Used to retrieve a new bearer JWT token if the refresh token is used and has not expired yet. Basically, it's almost the same as a fresh login but instead of a login and a password it uses a valid JWT bearer token Has no effect if [jwtConfig.useRefreshToken] is false in the config",
          "title": "Refresh JWT Token",
          "method": "POST",
          "path": "/api/v1/auth/refresh-token",
          "authorization": null,
          "params": [],
          "response_models": [
            {
              "status_code": 200,
              "content_type": "application/json",
              "response": {
                "error": null,
                "data": {
                  "bearer_token": "",
                  "refresh_token": "",
                  "bearer_expires_at": "1959-05-07T00:00:00.000",
                  "refresh_expires_at": "1996-11-19T00:00:00.000"
                }
              }
            },
            {
              "status_code": 401,
              "content_type": "application/json",
              "response": {
                "error": {
                  "code": "string",
                  "message": "string",
                  "trace_id": "string"
                },
                "data": null
              }
            },
            {
              "status_code": 500,
              "content_type": "application/json",
              "response": {
                "error": {
                  "code": "string",
                  "message": "string",
                  "trace_id": "string"
                },
                "data": null
              }
            },
            {
              "status_code": 500,
              "content_type": "application/json",
              "response": {
                "error": {
                  "code": "string",
                  "message": "string",
                  "trace_id": "string"
                },
                "data": null
              }
            }
          ]
        },
        {
          "description": "Performs a simple login with a username and password. The accepted user name might be a phone or an email, or both.",
          "title": "Basic Login",
          "method": "POST",
          "path": "/api/v1/auth/login/basic",
          "authorization": null,
          "params": [
            {
              "type": {
                "email": "nevin.jacobson@example.com",
                "phone": "+70948460200",
                "password": "string"
              },
              "name": "basicLoginData",
              "is_body_param": true,
              "is_required": true
            }
          ],
          "response_models": [
            {
              "status_code": 200,
              "content_type": "application/json",
              "response": {
                "error": null,
                "data": {
                  "bearer_token": "",
                  "refresh_token": "",
                  "bearer_expires_at": "1973-01-25T00:00:00.000",
                  "refresh_expires_at": "1951-11-03T00:00:00.000"
                }
              }
            },
            {
              "status_code": 401,
              "content_type": "application/json",
              "response": {
                "error": {
                  "code": "string",
                  "message": "string",
                  "trace_id": "string"
                },
                "data": null
              }
            },
            {
              "status_code": 500,
              "content_type": "application/json",
              "response": {
                "error": {
                  "code": "string",
                  "message": "string",
                  "trace_id": "string"
                },
                "data": null
              }
            },
            {
              "status_code": 500,
              "content_type": "application/json",
              "response": {
                "error": {
                  "code": "string",
                  "message": "string",
                  "trace_id": "string"
                },
                "data": null
              }
            }
          ]
        }
      ],
      "types": [
        "TokenResponse \n\tString bearerToken: \n\tString refreshToken: \n\tDateTime bearerExpiresAt: -0001-11-30T00:00:00.000\n\tDateTime refreshExpiresAt: -0001-11-30T00:00:00.000\n}\n",
        "UnAuthorizedException \n\tString message: \n\tint statusCode: 401\n\tString traceId: \n\tString code: \n}\n",
        "InternalServerException \n\tString message: \n\tint statusCode: 500\n\tString traceId: \n\tString code: \n}\n",
        "BadRequestException \n\tString message: \n\tint statusCode: 400\n\tString traceId: \n\tString code: \n}\n",
        "GenericJsonResponseWrapper \n\tObject error: null\n\tObject data: null\n}\n"
      ]
    },
    {
      "controller_name": "ProfileController",
      "description": "Works with the current user profile. It can return or update the user profile",
      "title": "User Profile Controller",
      "group": {
        "name": "User Area",
        "id": "user-area"
      },
      "endpoints": [
        {
          "description": "string",
          "title": "Returns the current user's profile",
          "method": "GET",
          "path": "/api/v1/profile",
          "authorization": null,
          "params": [],
          "response_models": [
            {
              "status_code": 200,
              "content_type": "application/json",
              "response": {
                "error": null,
                "data": {
                  "roles": [],
                  "first_name": "Grover",
                  "last_name": "Kelly",
                  "email": "marthe.cox@example.com",
                  "phone": "+7 (126) 838-25-00",
                  "middle_name": "Maurice",
                  "nick_name": "Jephthah",
                  "birth_date": "1997-01-14",
                  "id": 696,
                  "created_at": "1980-11-27T00:00:00.000",
                  "updated_at": "1997-10-16T00:00:00.000",
                  "is_deleted": false
                }
              }
            },
            {
              "status_code": 401,
              "content_type": "application/json",
              "response": {
                "error": {
                  "code": "string",
                  "message": "string",
                  "trace_id": "string"
                },
                "data": null
              }
            },
            {
              "status_code": 500,
              "content_type": "application/json",
              "response": {
                "error": {
                  "code": "string",
                  "message": "string",
                  "trace_id": "string"
                },
                "data": null
              }
            },
            {
              "status_code": 500,
              "content_type": "application/json",
              "response": {
                "error": {
                  "code": "string",
                  "message": "string",
                  "trace_id": "string"
                },
                "data": null
              }
            }
          ]
        }
      ],
      "types": [
        "AbstractUser \n\tList<Role> roles: null\n\tString firstName: null\n\tString lastName: null\n\tString email: null\n\tString phone: null\n\tString middleName: null\n\tString nickName: null\n\tDateTime birthDate: null\n\tint id: null\n\tDateTime createdAt: null\n\tDateTime updatedAt: null\n\tbool isDeleted: null\n}\n",
        "UnAuthorizedException \n\tString message: \n\tint statusCode: 401\n\tString traceId: \n\tString code: \n}\n",
        "GenericJsonResponseWrapper \n\tObject error: null\n\tObject data: null\n}\n",
        "BadRequestException \n\tString message: \n\tint statusCode: 400\n\tString traceId: \n\tString code: \n}\n"
      ]
    },
    {
      "controller_name": "UserController",
      "description": "",
      "title": "",
      "group": {
        "name": "",
        "id": ""
      },
      "endpoints": [
        {
          "description": "Returns a list of users. Supports pagination and limits",
          "title": "User Controller",
          "method": "GET",
          "path": "/api/v1/users/list",
          "authorization": {
            "required_headers": [
              "authorization"
            ],
            "roles": [
              "user"
            ]
          },
          "params": [
            {
              "type": "int",
              "name": "page",
              "is_body_param": false,
              "is_required": false
            },
            {
              "type": "int",
              "name": "limit",
              "is_body_param": false,
              "is_required": false
            }
          ],
          "response_models": [
            {
              "status_code": 200,
              "content_type": "application/json",
              "response": {
                "error": null,
                "data": {
                  "roles": [],
                  "first_name": "Caesar",
                  "last_name": "Baldwin",
                  "email": "conroy.griffith@example.com",
                  "phone": "+7 (765) 722 7800",
                  "middle_name": "Helaina",
                  "nick_name": "Denny",
                  "birth_date": "1955-06-03",
                  "id": 423,
                  "created_at": "1977-08-23T00:00:00.000",
                  "updated_at": "1961-05-14T00:00:00.000",
                  "is_deleted": false
                }
              }
            },
            {
              "status_code": 500,
              "content_type": "application/json",
              "response": {
                "error": {
                  "code": "string",
                  "message": "string",
                  "trace_id": "string"
                },
                "data": null
              }
            },
            {
              "status_code": 500,
              "content_type": "application/json",
              "response": {
                "error": {
                  "code": "string",
                  "message": "string",
                  "trace_id": "string"
                },
                "data": null
              }
            }
          ]
        }
      ],
      "types": [
        "AbstractUser \n\tList<Role> roles: null\n\tString firstName: null\n\tString lastName: null\n\tString email: null\n\tString phone: null\n\tString middleName: null\n\tString nickName: null\n\tDateTime birthDate: null\n\tint id: null\n\tDateTime createdAt: null\n\tDateTime updatedAt: null\n\tbool isDeleted: null\n}\n",
        "GenericJsonResponseWrapper \n\tObject error: null\n\tObject data: null\n}\n",
        "BadRequestException \n\tString message: \n\tint statusCode: 400\n\tString traceId: \n\tString code: \n}\n"
      ]
    }
  ],
  "types": [
    "TokenResponse \n\tString bearerToken: \n\tString refreshToken: \n\tDateTime bearerExpiresAt: -0001-11-30T00:00:00.000\n\tDateTime refreshExpiresAt: -0001-11-30T00:00:00.000\n}\n",
    "UnAuthorizedException \n\tString message: \n\tint statusCode: 401\n\tString traceId: \n\tString code: \n}\n",
    "InternalServerException \n\tString message: \n\tint statusCode: 500\n\tString traceId: \n\tString code: \n}\n",
    "BadRequestException \n\tString message: \n\tint statusCode: 400\n\tString traceId: \n\tString code: \n}\n",
    "GenericJsonResponseWrapper \n\tObject error: null\n\tObject data: null\n}\n",
    "AbstractUser \n\tList<Role> roles: null\n\tString firstName: null\n\tString lastName: null\n\tString email: null\n\tString phone: null\n\tString middleName: null\n\tString nickName: null\n\tDateTime birthDate: null\n\tint id: null\n\tDateTime createdAt: null\n\tDateTime updatedAt: null\n\tbool isDeleted: null\n}\n"
  ]
}