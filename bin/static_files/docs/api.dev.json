{
  "controllers": [
    {
      "controller_name": "AuthController",
      "description": "Generates JWT tokens and refresh tokens, creates new user accounts",
      "title": "User Authorization Controller",
      "group": {
        "name": "User Area",
        "id": "user-area"
      },
      "endpoints": [
        {
          "description": "Used to retrieve a new bearer JWT token if the refresh token is used and has not expired yet. Basically, it's almost the same as a fresh login but instead of a login and a password it uses a valid JWT bearer token Has no effect if [jwtConfig.useRefreshToken] is false in the config",
          "title": "Refresh JWT Token",
          "method": "POST",
          "path": "/api/v1/auth/refresh-token",
          "authorization": null,
          "params": [],
          "response_models": [
            {
              "status_code": 200,
              "content_type": "application/json",
              "response": {
                "error": null,
                "data": {
                  "bearer_token": "",
                  "refresh_token": "",
                  "bearer_expires_at": "1994-06-16T00:00:00.000",
                  "refresh_expires_at": "1990-05-12T00:00:00.000"
                }
              }
            },
            {
              "status_code": 401,
              "content_type": "application/json",
              "response": {
                "error": {
                  "code": "string",
                  "message": "string",
                  "trace_id": "string"
                },
                "data": null
              }
            },
            {
              "status_code": 500,
              "content_type": "application/json",
              "response": {
                "error": {
                  "code": "string",
                  "message": "string",
                  "trace_id": "string"
                },
                "data": null
              }
            },
            {
              "status_code": 500,
              "content_type": "application/json",
              "response": {
                "error": {
                  "code": "string",
                  "message": "string",
                  "trace_id": "string"
                },
                "data": null
              }
            }
          ]
        },
        {
          "description": "Performs a simple login with a username and password. The accepted user name might be a phone or an email, or both.",
          "title": "Basic Login",
          "method": "POST",
          "path": "/api/v1/auth/login/basic",
          "authorization": null,
          "params": [
            {
              "type": {
                "email": "susanna.albright@example.com",
                "phone": "+71490963400",
                "password": "string"
              },
              "name": "basicLoginData",
              "is_body_param": true,
              "is_required": true
            }
          ],
          "response_models": [
            {
              "status_code": 200,
              "content_type": "application/json",
              "response": {
                "error": null,
                "data": {
                  "bearer_token": "",
                  "refresh_token": "",
                  "bearer_expires_at": "1998-01-25T00:00:00.000",
                  "refresh_expires_at": "1957-10-25T00:00:00.000"
                }
              }
            },
            {
              "status_code": 401,
              "content_type": "application/json",
              "response": {
                "error": {
                  "code": "string",
                  "message": "string",
                  "trace_id": "string"
                },
                "data": null
              }
            },
            {
              "status_code": 500,
              "content_type": "application/json",
              "response": {
                "error": {
                  "code": "string",
                  "message": "string",
                  "trace_id": "string"
                },
                "data": null
              }
            },
            {
              "status_code": 500,
              "content_type": "application/json",
              "response": {
                "error": {
                  "code": "string",
                  "message": "string",
                  "trace_id": "string"
                },
                "data": null
              }
            }
          ]
        }
      ],
      "types": [
        "class TokenResponse {\n\tString bearerToken;\n\tString refreshToken;\n\tDateTime bearerExpiresAt;\n\tDateTime refreshExpiresAt;\n}\n",
        "class UnAuthorizedException {\n\tString message;\n\tint statusCode;\n\tString traceId;\n\tString code;\n}\n",
        "class InternalServerException {\n\tString message;\n\tint statusCode;\n\tString traceId;\n\tString code;\n}\n",
        "class BadRequestException {\n\tString message;\n\tint statusCode;\n\tString traceId;\n\tString code;\n}\n",
        "class GenericJsonResponseWrapper {\n\tObject error;\n\tObject data;\n}\n"
      ]
    },
    {
      "controller_name": "ProfileController",
      "description": "Works with the current user profile. It can return or update the user profile",
      "title": "User Profile Controller",
      "group": {
        "name": "User Area",
        "id": "user-area"
      },
      "endpoints": [
        {
          "description": "string",
          "title": "Returns the current user's profile",
          "method": "GET",
          "path": "/api/v1/profile",
          "authorization": null,
          "params": [],
          "response_models": [
            {
              "status_code": 200,
              "content_type": "application/json",
              "response": {
                "error": null,
                "data": {
                  "roles": [],
                  "first_name": "Annamaria",
                  "last_name": "Collier",
                  "email": "janaya.dunn@example.com",
                  "phone": "+7 (470) 029-02-00",
                  "middle_name": "Cecile",
                  "nick_name": "Stafford",
                  "birth_date": "1972-08-08",
                  "id": 8,
                  "created_at": "1996-04-10T00:00:00.000",
                  "updated_at": "1985-08-03T00:00:00.000",
                  "is_deleted": false
                }
              }
            },
            {
              "status_code": 401,
              "content_type": "application/json",
              "response": {
                "error": {
                  "code": "string",
                  "message": "string",
                  "trace_id": "string"
                },
                "data": null
              }
            },
            {
              "status_code": 500,
              "content_type": "application/json",
              "response": {
                "error": {
                  "code": "string",
                  "message": "string",
                  "trace_id": "string"
                },
                "data": null
              }
            },
            {
              "status_code": 500,
              "content_type": "application/json",
              "response": {
                "error": {
                  "code": "string",
                  "message": "string",
                  "trace_id": "string"
                },
                "data": null
              }
            }
          ]
        }
      ],
      "types": [
        "class AbstractUser {\n\tList<Role> roles;\n\tString firstName;\n\tString lastName;\n\tString email;\n\tString phone;\n\tString middleName;\n\tString nickName;\n\tDateTime birthDate;\n\tint id;\n\tDateTime createdAt;\n\tDateTime updatedAt;\n\tbool isDeleted;\n}\n",
        "class UnAuthorizedException {\n\tString message;\n\tint statusCode;\n\tString traceId;\n\tString code;\n}\n",
        "class GenericJsonResponseWrapper {\n\tObject error;\n\tObject data;\n}\n",
        "class BadRequestException {\n\tString message;\n\tint statusCode;\n\tString traceId;\n\tString code;\n}\n"
      ]
    },
    {
      "controller_name": "UserController",
      "description": "",
      "title": "",
      "group": {
        "name": "",
        "id": ""
      },
      "endpoints": [
        {
          "description": "Returns a list of users. Supports pagination and limits",
          "title": "User Controller",
          "method": "GET",
          "path": "/api/v1/users/list",
          "authorization": {
            "required_headers": [
              "authorization"
            ],
            "roles": [
              "user"
            ]
          },
          "params": [
            {
              "type": "int",
              "name": "page",
              "is_body_param": false,
              "is_required": false
            },
            {
              "type": "int",
              "name": "limit",
              "is_body_param": false,
              "is_required": false
            }
          ],
          "response_models": [
            {
              "status_code": 200,
              "content_type": "application/json",
              "response": {
                "error": null,
                "data": {
                  "roles": [],
                  "first_name": "Sophronia",
                  "last_name": "Barrett",
                  "email": "gisele.henry@example.com",
                  "phone": "+7 (319) 278-29-00",
                  "middle_name": "Chryste",
                  "nick_name": "Lise",
                  "birth_date": "1972-11-26",
                  "id": 887,
                  "created_at": "1980-07-18T00:00:00.000",
                  "updated_at": "1975-03-04T00:00:00.000",
                  "is_deleted": false
                }
              }
            },
            {
              "status_code": 500,
              "content_type": "application/json",
              "response": {
                "error": {
                  "code": "string",
                  "message": "string",
                  "trace_id": "string"
                },
                "data": null
              }
            },
            {
              "status_code": 500,
              "content_type": "application/json",
              "response": {
                "error": {
                  "code": "string",
                  "message": "string",
                  "trace_id": "string"
                },
                "data": null
              }
            }
          ]
        }
      ],
      "types": [
        "class AbstractUser {\n\tList<Role> roles;\n\tString firstName;\n\tString lastName;\n\tString email;\n\tString phone;\n\tString middleName;\n\tString nickName;\n\tDateTime birthDate;\n\tint id;\n\tDateTime createdAt;\n\tDateTime updatedAt;\n\tbool isDeleted;\n}\n",
        "class GenericJsonResponseWrapper {\n\tObject error;\n\tObject data;\n}\n",
        "class BadRequestException {\n\tString message;\n\tint statusCode;\n\tString traceId;\n\tString code;\n}\n"
      ]
    }
  ],
  "types": [
    "class TokenResponse {\n\tString bearerToken;\n\tString refreshToken;\n\tDateTime bearerExpiresAt;\n\tDateTime refreshExpiresAt;\n}\n",
    "class UnAuthorizedException {\n\tString message;\n\tint statusCode;\n\tString traceId;\n\tString code;\n}\n",
    "class InternalServerException {\n\tString message;\n\tint statusCode;\n\tString traceId;\n\tString code;\n}\n",
    "class BadRequestException {\n\tString message;\n\tint statusCode;\n\tString traceId;\n\tString code;\n}\n",
    "class GenericJsonResponseWrapper {\n\tObject error;\n\tObject data;\n}\n",
    "class AbstractUser {\n\tList<Role> roles;\n\tString firstName;\n\tString lastName;\n\tString email;\n\tString phone;\n\tString middleName;\n\tString nickName;\n\tDateTime birthDate;\n\tint id;\n\tDateTime createdAt;\n\tDateTime updatedAt;\n\tbool isDeleted;\n}\n"
  ]
}